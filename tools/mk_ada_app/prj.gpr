---------------------------------------------------------------------------
-- Put your copyright / version stuff here                               --
---------------------------------------------------------------------------

with "avr.gpr";

project $project is


   for Main use ($src_project);

   for Languages use ("Ada");
   for Object_Dir use "obj";
   for Exec_Dir use ".";


   package Builder is
      for Default_Switches ("Ada") use AVR.Builder'Default_Switches ("Ada");

      for Global_Configuration_Pragmas use
         AVR.Builder'Global_Configuration_Pragmas;

      for Executable_Suffix use ".elf";

   end Builder;


   package Compiler is
      for Default_Switches ("Ada") use AVR.Compiler'Default_Switches ("Ada");
--        for Default_Switches ("Ada") use
--          (
--           "-gdwarf-2",          --  generate debug symbols
--           "-gnatt",             --  generate tree files for Xref and ASIS

--           "-gnatwp",            --  warnings on ineffective pragma Inlines
--           "-gnatwu",            --  warnings on unused entities

--           "-gnatn",             --  enable inlining
--           --         "-gnatN",             --  enable front-end inlining
--           "-gnatp",             --  suppress run-time checks
--           "-gnatVn",            --  no validity checks (smaller code)
--           "-Os",                --  optimize for space
--           "-gnatef",            --  full path in error messages
--           --         "-mcall-prologues",     --  use function calls for prologues

--           "-frename-registers",  --  avoid false dependencies in
--           --  scheduled code
--           --  Attempt to avoid false dependencies in scheduled code by
--           --  making use of registers left over after register
--           --  allocation.  This optimization will most benefit
--           --  processors with lots of registers. It can, however, make
--           --  debugging impossible, since variables will no longer stay
--           --  in a "home register".

--           --         "-fnew-ra",           --  use the new register allocator
--           --  The new register allocator is actually deprecated
--           --  officially since the compiler might ICE over valid code.
--           --  I never had problems for the AVR target and it sometimes
--           --  produces considerably better code.

--           "-mmcu=" & MCU,       --  name of the micro controler

--           "-fdata-sections",    --  create separate data sections
--           "-ffunction-sections" --  create separate function sections
--          );
   end Compiler;


   package Binder is
      for Default_Switches ("Ada") use AVR.Binder'Default_Switches ("Ada");
--        for Default_Switches ("Ada") use
--          ("-freestanding");       -- small binder file
   end Binder;

--   MCU := AVR.MCU;
   package Linker is
      for Default_Switches ("Ada") use AVR.Linker'Default_Switches ("Ada");
--        for Default_Switches ("Ada") use
--          ("-Wl,--gc-sections",    -- remove sections of unused code
--          ("-Wl,--relax",          -- linker relaxation
--           "-gdwarf-2",            -- keep binder file
--           "--GCC=avr-gcc -Os -mmcu=" & MCU
--            & " --RTS=" & AVR.RTS_BASE & "/rts/" & MCU);
   end Linker;


   for Source_Dirs use (".");

end $project;
